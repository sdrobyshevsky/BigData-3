// Вводный курс по Big Data (семинары)
// Урок 3. Инструменты работы и визуализации
// Поднять кластер локально с помощью контейнеров в Docker (делали на семинаре);
// Загрузите датасет по ценам на жилье Airbnb, доступный на kaggle.com: https://www.kaggle.com/dgomonov/new-york-city-airbnb-open-data; 
// Используя Python, реализуйте скрипт mapper.py и reducer.py для расчета, и с помощью MapReduce расчитайте среднее значение и дисперсию 
// по признаку “price” (возможно потребуются ассимптотические формулы для дисперсии).
// Подсчитайте среднее значение и дисперсию по признаку “price” в Hive. Сравните результаты, какой вариант предпочтительнее? Быстрее?


from mrjob.job import MRJob
from mrjob.step import MRStep

import statistics

class PriceStats(MRJob) :

def mapper(self, _, line):

    data = line.split(',')

    price = float(data[9])

    yield 'price', price

def reducer(self, key, values):

    prices = list(values)

    mean = statistics.mean(prices)

    variance = statistics.variance(prices)

    yield 'mean', mean

    yield 'variance', variance

if name == 'main':

PriceStats.run()

Для подсчета среднего значения и дисперсии по признаку "price" в Hive можно воспользоваться следующим запросом:

SELECT

AVG(price) AS mean_price,

VARIANCE(price) AS variance_price

FROM 

&lt; table_name & gt; ;

//Сравнение результатов выполнения задачи с использованием MapReduce и Hive зависит от объема данных и конфигурации кластера.
//В целом, MapReduce может быть более эффективным для обработки больших объемов данных, тогда как Hive может быть более удобным для
//пользователей, не имеющих опыта программирования. Когда речь идет о обработке больших объемов данных, MapReduce обычно используется 
//для распределенной обработки данных на кластере узлов. Это позволяет более эффективно использовать ресурсы и ускорить обработку данных. 
//С другой стороны, Hive позволяет пользователям задавать запросы на языке SQL, что делает его более доступным для аналитиков и специалистов
//по работе с данными, не имеющих опыта программирования. Важно учитывать также различия в производительности между MapReduce и Hive. 
//В некоторых случаях MapReduce может быть быстрее, особенно при работе с большими объемами данных и сложными операциями. Однако Hive 
//предлагает более удобный интерфейс и возможность использовать привычный язык запросов, что может ускорить разработку и упростить работу
//с данными. Также стоит отметить, что Hive поддерживает различные форматы данных, включая структурированные и неструктурированные данные,
//что делает его более гибким инструментом для работы с различными типами данных. С другой стороны, MapReduce требует более тщательной 
//настройки и оптимизации, чтобы обеспечить оптимальную производительность.В итоге выбор между MapReduce и Hive будет зависеть от конкретной 
//задачи, объема данных, опыта пользователя и других факторов. Оба инструмента имеют свои преимущества и недостатки, и выбор должен быть сделан 
//с учетом конкретных потребностей и условий использования.

//Итак, выбор между mapreduce и Hive зависит от конкретной задачи и уровня навыков пользователя. 
//Для простых операций, таких как расчет среднего значения и дисперсии по признаку "price", Hive может быть предпочтительнее 
//из-за простоты использования и скорости работы. В то же время, для более сложных задач, требующих специфической обработки данных,
//mapreduce может быть более удобным. Например, для анализа больших объемов неструктурированных данных, таких как логи серверов или 
//текстовые документы, mapreduce может быть более подходящим инструментом из-за его высокой гибкости и возможности написания 
//специализированных скриптов обработки данных. Однако, при необходимости быстрого выполнения простых операций над структурированными
//данными, Hive может быть предпочтительнее из-за своего удобного интерфейса и встроенной оптимизации запросов. Еще одним важным аспектом 
//при выборе между mapreduce и Hive является масштабируемость. Mapreduce может быть лучшим выбором для распределенной обработки данных 
//на кластерах серверов, где требуется высокая производительность и эффективное использование ресурсов. С другой стороны, Hive может 
//быть более удобным для небольших до среднего объема данных, где удобство использования и быстрая разработка запросов имеют большее значение.
//В целом, какая из технологий выбрать - mapreduce или Hive - зависит от конкретной задачи, объема и структуры данных, а также уровня 
//навыков пользователей. 

//Сравнение результатов работы mapreduce и Hive:

Mapreduce:

Достоинства:
Гибкость - возможность реализации своих собственных скриптов mapper и reducer для обработки данных.
Возможность работать с данными в различных форматах.

Недостатки:
Необходимость написания и поддержания собственных скриптов.
Требуется более высокий уровень навыков программирования.

Hive:

Достоинства:
Простота использования -SQL - подобный язык запросов, позволяет легко обращаться к данным.
Встроенная оптимизация запросов и параллельная обработка данных.

Недостатки:
Ограничение возможностей по сравнению с mapreduce - не все операции и преобразования данных можно выполнить с помощью Hive.
Сравнение скорости работы:
Hive может быть быстрее в случае выполнения простых агрегирующих запросов, таких как расчет среднего значения и дисперсии.
Mapreduce более гибок, но может потребовать больше времени на разработку и настройку.
